<UserControl x:Class="DestinyNetViews.ToolYearPanelView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:converters="clr-namespace:Converters;assembly=Destiny.Core"
             xmlns:controlsUI="clr-namespace:Destiny.UI.Controls;assembly=Destiny.UI"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="400">
    <UserControl.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    </UserControl.Resources>
    <Grid>
        <ListBox 
            BorderThickness="0"
            ItemsSource="{Binding Path=Calendars}"  
            ItemContainerStyle="{StaticResource xListBoxItem}" 
            VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid VerticalAlignment="Stretch"  Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <Canvas Grid.Column="0">
                                <Ellipse Width="16" Height="16" Margin="7" Fill="{Binding Path=Calendar.Background}"/>
                            </Canvas>
                            <Label Grid.Column="1" HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                               Content="{Binding Path=Calendar.Name}"/>
                            <Button Grid.Column="2" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontWeight="ExtraBold"
                                    Visibility="{Binding Path=IsOpeneble, Converter={StaticResource BoolToVisibilityConverter}}"
                                    Style="{StaticResource sButton}" Command="{Binding Path=OpenEventsViewCommand}">
                                <Label Grid.Column="1">
                                    <Label.Style>
                                        <Style TargetType="Label">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsOpened}" Value="True">
                                                    <Setter Property="Content" Value="-"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=IsOpened}" Value="False">
                                                    <Setter Property="Content" Value="+"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Label.Style>
                                </Label>
                            </Button>
                        </Grid>
                        <Grid Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" Background="{Binding Path=BackgroundColor}" 
                              VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                            <ListBox Background="Transparent"
                                BorderThickness="0"
                                ItemsSource="{Binding Path=Events}"  
                                Visibility="{Binding Path=IsOpened, Converter={StaticResource BoolToVisibilityConverter}}"
                                ItemContainerStyle="{StaticResource xListBoxItem}"  
                                VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Button Height="30" Background="Transparent"
                                                Style="{StaticResource sButton}" 
                                                Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type ListBox}}, Path=DataContext.SelectedEventCommand}"
                                                CommandParameter="{Binding}">
                                            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="30"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="30"/>
                                                </Grid.ColumnDefinitions>
                                                <Label Grid.Column="0" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"
                                                                Background="Transparent" Content="-"/>

                                                <Label Grid.Column="1" HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                                                                Background="Transparent" Content="{Binding Path=Caption}"/>

                                                <Button Grid.Column="2" x:Name="xEditingButton" Background="Transparent"
                                                            Style="{StaticResource sButton}" 
                                                            Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=2, AncestorType={x:Type ListBox}}, Path=DataContext.EditEventCommand}"
                                                            CommandParameter="{Binding}">
                                                    <controlsUI:IconsPack IconKind="EditingIcon" Margin="5"/>
                                                </Button>
                                            </Grid>
                                        </Button>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsMouseOver}" Value="True">
                                                <Setter TargetName="xEditingButton" Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsMouseOver}" Value="False">
                                                <Setter TargetName="xEditingButton" Property="Visibility" Value="Hidden"/> 
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Grid>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</UserControl>
